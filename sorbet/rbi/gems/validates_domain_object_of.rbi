# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/validates_domain_object_of/all/validates_domain_object_of.rbi
#
# validates_domain_object_of-980baf538095

module ValidatesDomainObjectOf
  def self.construct!(domain_object_class, method, *args); end
  def self.construct_by_block(domain_object_class, *args); end
  def self.construct_with!(*args); end
  def self.load_i18n_locales; end
end
class ValidatesDomainObjectOf::Context
  def convert_to_message(exception); end
  def handle_error(key, *args); end
  def initialize; end
  def register_error_handler(key, &block); end
  def rescue_generic_error(&block); end
  def rescue_translatable_error(&block); end
  def try!; end
end
class DomainObjectArgumentError < ArgumentError
  def i18n_key; end
  def i18n_options; end
  def initialize(args); end
  def parse_i18n_args(args); end
  def self.i18n(key, options = nil); end
  def translatable?; end
end
module ActiveModel
end
module ActiveModel::Validations
end
class ActiveModel::Validations::DomainObjectValidator < ActiveModel::EachValidator
  def check_validity!; end
  def validate_each(model, attr, value); end
end
module ActiveModel::Validations::HelperMethods
  def validates_domain_object_of(*attr_names); end
end
class ValidatesDomainObjectOf::Railtie < Rails::Railtie
end
